apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.lava.yogaapp"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField("String", "SERVER_URL", "\"${properties.getProperty("SERVER_URL")}\"")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix = ".dev"
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.core:core-ktx:$version_core"
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$version_kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$version_kotlin"
    implementation "androidx.annotation:annotation:$version_annotation"

    // Live Data, View Model
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"

    // Navigation Components
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"
    implementation "androidx.navigation:navigation-fragment-ktx:$version_nav"
    implementation "androidx.navigation:navigation-ui-ktx:$version_nav"

    /**-------------------testing libs------------------------------------------**/
    //UI Testing , AndroidJUnitRunner and JUnit Rules & Espresso dependencies
    //junit 5
    androidTestImplementation "androidx.test.ext:junit-ktx:$version_androidx_junit"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$version_junit"
    testImplementation "io.mockk:mockk:$version_mock"
    androidTestImplementation "org.assertj:assertj-core:$version_assertj"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$version_expresso_intents"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_coroutines_test"
    implementation "androidx.arch.core:core-testing:$version_core_testing"
    implementation "androidx.test.espresso:espresso-idling-resource:$version_expresso"
    implementation("androidx.test.espresso:espresso-contrib:$version_expresso") {
        exclude group: 'org.checkerframework', module: 'checker'
        exclude group: 'com.google.protobuf', module: 'protobuf-lite'
    }
    /**-------------------------------------------------------------**/

    // LiveData
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$version_lifecycle"

    // Room and Lifecycle dependencies
    implementation "androidx.room:room-runtime:$version_room"
    kapt "androidx.room:room-compiler:$version_room"
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$version_room"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutine"

    // Retrofit, Glide, Moshi
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.squareup.moshi:moshi:$version_moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$version_moshi"
    implementation "com.squareup.okhttp3:logging-interceptor:$version_okhttp_interceptor"
    implementation("com.github.bumptech.glide:glide:$version_glide") {
        exclude group: "com.android.support"
    }

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:$version_hilt"
    kapt "com.google.dagger:hilt-android-compiler:$version_hilt"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // Timber
    implementation "com.jakewharton.timber:timber:$version_timber"

    // Display Scaling
    implementation "com.intuit.sdp:sdp-android:$version_sdp"
    implementation "com.intuit.ssp:ssp-android:$version_sdp"

}